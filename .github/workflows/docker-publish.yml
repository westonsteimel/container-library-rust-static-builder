on: 
  push:
    branches:
      - main
  schedule:
    - cron: '0 1 * * *'
name: Build and publish to DockerHub
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REGISTRY: 'docker.io'
  DOCKER_REPOSITORY: 'rust-static-builder'
jobs:
  stable:
    name: stable
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Build and Publish stable to DockerHub
        run: |
          export DOCKER_BUILD_CONTEXT="stable" 
          docker build --pull --tag get-version --build-arg TARGET="x86_64-unknown-linux-musl" "${DOCKER_BUILD_CONTEXT}"
          VERSION_STRING=`docker run --rm --entrypoint "rustc" get-version --version`
          pattern='^rustc (.*) \(.*$'
          [[ $VERSION_STRING =~ $pattern ]] # $pat must be unquoted
          echo "${BASH_REMATCH[1]}"
          export DOCKER_IMAGE_VERSION="${BASH_REMATCH[1]}"
          export DOCKER_TAGS="stable,latest,${DOCKER_IMAGE_VERSION}"
          ./scripts/publish.sh
  nightly:
    name: nightly
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Build and Publish nightly to DockerHub
        run: |
          export DOCKER_BUILD_CONTEXT="nightly"
          docker build --pull --tag get-nightly-version --build-arg TARGET="x86_64-unknown-linux-musl" "${DOCKER_BUILD_CONTEXT}"
          VERSION_STRING=`docker run --rm --entrypoint "rustc" get-nightly-version --version`
          pattern='^rustc (.*) \(.*$'
          [[ $VERSION_STRING =~ $pattern ]] # $pat must be unquoted
          echo "${BASH_REMATCH[1]}"
          export DOCKER_IMAGE_VERSION="${BASH_REMATCH[1]}"
          export DOCKER_TAGS="nightly,${DOCKER_IMAGE_VERSION}"
          ./scripts/publish.sh

